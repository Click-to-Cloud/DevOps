#!/bin/bash

# MIT License
#
# Copyright (c) 2018 Click to Cloud Pty Ltd
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

tmpdir=`mktemp -d`
echo $tmpdir

rm -r $RootDir/lightning/.last

printTimestamp() {
    stat -f "%c" $1
}

lastTimestamp() {
    dir=$1
    max=0
    for file in `ls $dir`; do
        timestamp=`printTimestamp $dir/$file`
        if [[ $timestamp -gt $max ]];then
            max=$timestamp
        fi
    done;

    echo $max
}

if [[ ! -f $RootDir/lightning/.last ]];then
    touch $RootDir/lightning/.last
fi
lastRun=`cat $RootDir/lightning/.last`

runGulp=0

if [[ `lastTimestamp "$RootDir/lightning/src/common"` -gt lastRun ]];then
    runGulp=1
fi
if [[ `lastTimestamp "$RootDir/lightning/src/apps"` -gt lastRun ]];then
    runGulp=1
fi
if [[ `lastTimestamp "$RootDir/lightning/src/preact"` -gt lastRun ]];then
    runGulp=1
fi
if [[ `lastTimestamp "$RootDir/lightning/src/library"` -gt lastRun ]];then
    runGulp=1
fi
if [[ `lastTimestamp "$RootDir/lightning/src/static"` -gt lastRun ]];then
    runGulp=1
fi

if [[ forceRun -eq 1 ]];then
    runGulp=1
fi
if [[ forceRun -eq 2 ]];then
    runGulp=1
fi

package=\
'<?xml version="1.0" encoding="UTF-8"?>
<Package xmlns="http://soap.sforce.com/2006/04/metadata">
    <types>
        <members>*</members>
        <name>StaticResource</name>
    </types>
    <types>
        <members>*</members>
        <name>AuraDefinitionBundle</name>
    </types>
	<version>40.0</version>
</Package>
'

meta=\
'<?xml version="1.0" encoding="UTF-8"?>
<StaticResource xmlns="http://soap.sforce.com/2006/04/metadata">
    <cacheControl>Public</cacheControl>
	<contentType>application/zip</contentType>
</StaticResource>
'

if [[ runGulp -eq 1 ]];then
    cd $RootDir/lightning
    gulp

    if [[ $? -ne 0 ]];then
        exit 1
    fi

    echo "Packaged"

    echo "$package" > $tmpdir/package.xml

    staticresource_dir=$tmpdir/staticresources
    mkdir $staticresource_dir

    cp $RootDir/lightning/dist/ctcPropertyLightning.zip $staticresource_dir/ctcPropertyLightning.resource
    echo $meta > $staticresource_dir/ctcPropertyLightning.resource-meta.xml

    date
    sfdx force:mdapi:deploy -u $OrgAlias -d $tmpdir -w 100
    date

    echo "Uploading..."
    echo "Uploaded"
else
    echo No need to run gulp and upload, as files are not changed.
fi

runDX=0

if [[ `lastTimestamp "$RootDir/lightning/src/aura"` -gt lastRun ]];then
    runDX=1
fi

if [[ forceRun -eq 1 ]];then
    runDX=1
fi

if [[ runDX -eq 1 ]];then
    rm -rf $tmpdir
    mkdir -p $tmpdir
    echo "$package" > $tmpdir/package.xml

    bundle_dir=$tmpdir/aura
    mkdir $bundle_dir

    cp -r $RootDir/src/aura/* $bundle_dir/

    date
    sfdx force:mdapi:deploy -u $OrgAlias -d $tmpdir -w 100
    date
else
    echo No need to run DX and deploy, as files are not changed.
fi

#rm -rf $tmpdir

echo `date +%s` > $RootDir/lightning/.last
